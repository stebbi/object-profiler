
Introduction
------------

This is a toy project to learn a bit about Scala and the Scala toolchain. 

The code implements an "object profiler". It's a bit like a memory profiler, only different:

 - Instead of collecting information about heap space allocation, it collects information about JVM object state and relationships.

 - Instead of showing how allocated memory is divided between classes, it starts with a "root object" and shows the tree formed by the objects' member fields and bean properties, down to a configurable depth limit. 

 - Instead of inspecting how memory allocation changes between timestamps, it inspects field and property value changes in the tree formed from the root object.

It is useful for debugging data migration results. One approach is to create a synthetic, small migration set and start by recording and manually correcting an object profile. The corrected profile can then be repeatedly reconciled with new results during a debugging session.

